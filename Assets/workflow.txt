CORE PHYSICS
 - throttle process
 - stability torque
 - control authority by velocity
 - G limiter yaw
 - G limiter roll
 - Trim assist

 Get fucking github to fucking work again for fuck's sake
 

  CAMERA
 - Dynamic follow
 - Free look
 - Look at target

CORE UI
 - speed indicator
 - altitude indicator
 - throttle indicator
 - velocity vector


 WHEELS LOL
  - lol it bouncey
  - when hit ground it go boing boing
  - Nosewheel steering
  - Braking
  - Wheel raise/lower


OBJECT ORIENTIZE GAME OBJECTS
  - Think of individual computer modules connected to each other

Make nosewheel turn faster
make max steering constant up until certain speed
brake only apply when thrust near 0%

Differentiate throttle vs thrust
 - throttle changes rapidly (0-100 percent)
 - thrust changes slowly (converted from percent along range scale)

 PARASITIC DRAG OBJECT
  - attach to an object, link to flight data, and it will add  parasitic drag
  - wheels out has drag now

 Fix throttle acceleration bug -- manually coded acceleration

FUEL SYSTEM -- Engine Control script?
  - Draw fuel based on throttle level
  - Fuel/thrust efficiency changes based on altitude
  - Mass changes as fuel level changes?
  - HUD display of air density and fuel burn rate

COMBAT FLOW
 - World identity object
   > allows for lots of display information (range number, locked, radar signature, launch parameters, friendly, datalink/radar/visual)
 - HUD unit label object
   > reads info from world identity object
 - game object system -- recognize others in playing field
 - HUD squares around other planes
 - destruction modeling

universal RealFlight script?
  - move input management, engine management, out of RealFlightControl
  - separate scripts control input

MULTIPLE CAMERA HANDLING
  - SPECTATOR CAM
  - DEATH CAM
  - CAM CONTROLLER 

DEATH HANDLING
 - explosion
 - explosion flare
 - spectator cam placed behind player
 - spectator cam if player (enable or disable flying)


CANNON
 - Particle emission
 - Particle collision
 - Damage dealing
 - Ricochet or explode based off of impact velocity (WIP: INCLUDE TARGET VELOCITY IN IMPACT VELOCITY MEASUREMENT)

 
 Spawn Manager Class? Or static container in CombatFlow script?

 TARGETING COMPUTER CLASS
 - Loop through each spawned object --> attempt to see each
 - DETECTION CONDITIONS -- if succeeds, appropriate icon drawn onscreen over object
   > Visual
   > Radar
   > Datalink
 - HUD icon over object
   > change image based on CombatFlow's type
   > HUD image loads from resources based on CombatFlow type
   > icon object spawned for every game object, kept offscreen
   > range shown by number -- SHOULD HAVE INTUITIVE VISUAL INDICATION, TOO (multiple tiers of square sizes based on range? Or dynamically scaling?)
 - Line of sight -- changes image
 - Lock onto target (quick press)
   > icon shows more data
      >> Detection conditions
	  >> Range slider
	  >> Target bearing arrow (top down? or by perspective?)
	  >> Target altitude + climb rate
	  >> Target speed
	  >> Target type 
 - Look at target (press and hold)

SIMPLE AI
  - Fly towards waypoint objects, use physics

TARGET TRACKING -- assume all game units always visible
 - Target selection -- select closest to nose
 - Target lock -- if selected missile seeker can see target within cone
 - create boolean for visibility -- draw box, selectable, lockable only if visible

BASIC PLACEHOLDER MISSILE TYPES
 - Seeker cone
 - Burn time
 - Motor thrust
 - lift/drag coeff (turn rate vs energy bleed)
 - turning torque
 - stability
 - blast radius
 - blast damage

WEAPON HARDPOINT OBJECT



CLOSE RANGE VISUAL TALLY
 - game unit visible if within visual range
 - visual range changes depending on angle. (High in front, medium in up and sides, extremely low behind and below)

RADAR SYSTEM
 - Current scan zone (show as large solid square)
 - Gimbal limits (show as large dotted square)
 - scan zone moves to camera, within gimbal limits
 - scan zone size can change? higher detection threshold for larger scan zone? -- NOT SURE IF THIS IS REALISTIC. NEED TO RESEARCH
   >> NOT REALISTIC. NARROW SCAN ZONE ONLY AFFECTS FREQUENCY OF TARGET UPDATES. DETECTION THRESHOLD IS NOT CHANGED.
   >> possible benefit would be reduced 'time to acquire' when bandit enters scan field
 - Target detectability parameters result in radar signature value
   > radar signature value must be above detection threshold to be visible
   > time to acquire? to avoid player using small scan zone and spazzing around to find enemies?
   > Target detectability parameters:
     >> COLOR UNIQUENESS (is target closing/running)
	 >> DISTANCE UNIQUENESS (what is behind target)
	 >> RANGE (how far is target)

 RADAR WARNING RECEIVER
  - Shows info about incoming radar energy (bearing, strength, type)

CONVERT TO ONLINE MULTIPLAYER

DATALINK

REARMING

ENLARGE MAP WITHOUT DESTROYING COMPUTERS


