CORE PHYSICS
 - throttle process
 - stability torque
 - control authority by velocity
 - G limiter yaw
 - G limiter roll
 - Trim assist

 Get fucking github to fucking work again for fuck's sake
 

  CAMERA
 - Dynamic follow
 - Free look
 - Look at target

CORE UI
 - speed indicator
 - altitude indicator
 - throttle indicator
 - velocity vector


 WHEELS LOL
  - lol it bouncey
  - when hit ground it go boing boing
  - Nosewheel steering
  - Braking
  - Wheel raise/lower


OBJECT ORIENTIZE GAME OBJECTS
  - Think of individual computer modules connected to each other

Make nosewheel turn faster
make max steering constant up until certain speed
brake only apply when thrust near 0%

Differentiate throttle vs thrust
 - throttle changes rapidly (0-100 percent)
 - thrust changes slowly (converted from percent along range scale)

 PARASITIC DRAG OBJECT
  - attach to an object, link to flight data, and it will add  parasitic drag
  - wheels out has drag now

 Fix throttle acceleration bug -- manually coded acceleration

FUEL SYSTEM -- Engine Control script?
  - Draw fuel based on throttle level
  - Fuel/thrust efficiency changes based on altitude
  - Mass changes as fuel level changes?
  - HUD display of air density and fuel burn rate

COMBAT FLOW
 - World identity object
   > allows for lots of display information (range number, locked, radar signature, launch parameters, friendly, datalink/radar/visual)
 - HUD unit label object
   > reads info from world identity object
 - game object system -- recognize others in playing field
 - HUD squares around other planes
 - destruction modeling

universal RealFlight script?
  - move input management, engine management, out of RealFlightControl
  - separate scripts control input

MULTIPLE CAMERA HANDLING
  - SPECTATOR CAM
  - DEATH CAM
  - CAM CONTROLLER 

DEATH HANDLING
 - explosion
 - explosion flare
 - spectator cam placed behind player
 - spectator cam if player (enable or disable flying)


CANNON
 - Particle emission
 - Particle collision
 - Damage dealing
 - Ricochet or explode based off of impact velocity (WIP: INCLUDE TARGET VELOCITY IN IMPACT VELOCITY MEASUREMENT)

 
 Spawn Manager Class? Or static container in CombatFlow script?

 TARGETING COMPUTER CLASS
 - Loop through each spawned object --> attempt to see each
 - DETECTION CONDITIONS -- if succeeds, appropriate icon drawn onscreen over object
   > Visual
   > Radar
   > Datalink
 - HUD icon over object
   > change image based on CombatFlow's type
   > HUD image loads from resources based on CombatFlow type
   > icon object spawned for every game object, kept offscreen
   > range shown by number -- SHOULD HAVE INTUITIVE VISUAL INDICATION, TOO (multiple tiers of square sizes based on range? Or dynamically scaling?)
 - Line of sight -- changes image
 - Lock onto target (quick press)
   > icon shows more data
      >> Detection conditions
	  >> Range slider
	  >> Target bearing arrow (top down? or by perspective?)
	  >> Target altitude + climb rate
	  >> Target speed
	  >> Target type 
 - Look at target (press and hold)

 TARGET TRACKING -- assume all game units always visible
 - Target selection -- select closest to nose
 - Target lock -- if selected missile seeker can see target within cone
 - create boolean for visibility -- draw box, selectable, lockable only if visible

SIMPLE AI
  - Fly towards waypoint objects



BASIC PLACEHOLDER MISSILE TYPES
 - Seeker cone
 - Burn time
 - Motor thrust
 - lift/drag coeff (turn rate vs energy bleed)
 - turning torque
 - stability
 - blast radius
 - blast damage

WEAPON HARDPOINT OBJECT

ABSTRACT WEAPON CLASS -- allows many types of weapons to be recognized equally as 'Weapon'

HARDPOINT CONTROLLER -- switch between weapon types

New airplane model looks sicccc as fuccccc

Remove majority of BasicAirplane colliders to reduce lag
 -- THIS WILL CHANGE AIRCRAFT HANDLING

Investigate lookAt camera wonkiness



De-crust explosions and weapon collisions -- WILL REQUIRE DESIGN DECISIONS
 - Explosion has a specified team? Cannot hurt allied CombatFlow's?
 - Bombs cannot collide with friendly explosions?
 - Remove pointless goExplode function in Explode class -- just set those values from the static method
 - More explosion properties -- expand time, team, destroyProjectiles

 Camera axis angle offset in various cases like bomb selected, or gear down

 Added ground targets

 Create non-dropping weapon pods

  Afterburner graphic

  Make hardpoints more versatile
  - launchBegin and launchEnd
  - call launchEnd on button release -- THEN find next available hardpoint
	>>>>>>>> WILL STILL NEED TO SEARCH FOR HARDPOINT ON BUTTON PRESS 
		>>> only if current isn't ready to launch?
		>>> might still be possible to do this by having next at beginning of launch as-is
  - (weapon change will automatically call launchEnd on the current selection before changing)
  - (launchEnd does nothing if hardpoint hasn't launched yet)
  - hardpoint keeps reference to previous projectile while reloading -- connection broken as soon as next projectile launched


  use raycasting and repositioning to de-crust terrain explosions
  - increase physics step time to decrease CPU load
  - change lerps to use some form of deltaTime

 HUD shows weapon graphic for each hardpoint, selected weapon, reload remaining, highlight all of selected type
  - each hardpoint carries new HUD icon obj, image changed by weapon, reads hardpoint reload data
  - updateHUD() in hardpointController -- called when weapon changed or fired

 Decent mouse controls
  - forward/back buttons for weapon select
  - scroll wheel for throttle
  - left click guns
  - right click for launch

 REALISTIC MISSILE PERFORMANCE + GUIDANCE
  - Reasonable missile physics values -- ~1.5km range
  - Predicted lead angle (seek constant-bearing-decreasing-range) aka proportional guidance
    > Target bearing line 
	> Target velocity --> target tangential velocity
	> Projected lead axis/plane -- coplanar with target bearing line and target velocity (cross of the two)
	> Projectile velocity
	> Projected lead -- trig function to get lead angle -- ANGLE OFF OF BEARING LINE IN-PLANE WITH TARGET VELOCITY
	  >>> Direction vectors? Target quaternions?
	  >>> tangential component of projectile velocity matches tangential component of target velocity
	> torque vector is cross of projectile velocity and target direction vector?
	  >>> angle between belocity and target direction vector 
	  >>> torque vector separated into PITCH and YAW input components
	> pitch and yaw components fed into realFlight script

  - Predicted average velocity over remaining flight time
  - Lofting stage (function of distance)

  - BUGS:
    > predicted average velocity always showed zero
	> wibble wobble
	> Maneuvering target, won't track if in missile's rear hemisphere
	> Stationary target, won't track if in missile's front hemisphere
	> Missiles apply angular drag when docked to player -- they might not??


SPAWNMANAGER

NETWORKING

GROUND CREW MENU
 - open once landed within range of airfield, at 0 speed
 - rearm
 - change loadout
 - refuel

GROUND UNITS: AIR DEFENSE
 - AAA turrets (close range, high accuracy)
 - flak turrets (medium range, medium accuracy)
 - SAM sites (long range, low accuracy)

GROUND UNITS: TARGETS -- affect rearm/refueling capability
 - Logistics trucks
 - Crew barracks
 - Hangars
 - Ammo Depot -- 
 - Fuel Depot -- airfield fuel remaining


============================== GROUND FORCES STAGE

GROUND FORCES BASE:
 - Barracks
 - Vehicle depot

GROUND UNITS: GROUND BATTLE
 - Tanks
 - Artillery
 - Troop transport
 - Infantry
 - 


CLOSE RANGE VISUAL TALLY
 - game unit visible if within visual range
 - visual range changes depending on angle. (High in front, medium in up and sides, extremely low behind and below)

 ===============================  RADAR STAGE

RADAR SYSTEM
 - Current scan zone (show as large solid square)
 - Gimbal limits (show as large dotted square)
 - scan zone moves to camera, within gimbal limits
 - scan zone size can change? higher detection threshold for larger scan zone? -- NOT SURE IF THIS IS REALISTIC. NEED TO RESEARCH
   >> NOT REALISTIC. NARROW SCAN ZONE ONLY AFFECTS FREQUENCY OF TARGET UPDATES. DETECTION THRESHOLD IS NOT CHANGED.
   >> possible benefit would be reduced 'time to acquire' when bandit enters scan field
 - Target detectability parameters result in radar signature value
   > radar signature value must be above detection threshold to be visible
   > time to acquire? to avoid player using small scan zone and spazzing around to find enemies?
   > Target detectability parameters:
     >> COLOR UNIQUENESS (is target closing/running)
	 >> DISTANCE UNIQUENESS (what is behind target)
	 >> RANGE (how far is target)

 RADAR WARNING RECEIVER
  - Shows info about incoming radar energy (bearing, strength, type)

CONVERT TO ONLINE MULTIPLAYER

DATALINK

REARMING

ENLARGE MAP WITHOUT DESTROYING COMPUTERS


